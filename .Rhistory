sv <- fitlinear(mydat)
abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), col="blue")
plotDELP(mydat)
predLinesLP(fLW)
sv <- fitlinear(mydat)
abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), col="blue")
# TFM data
conc <- c(1, 1.5, 2)
numtested <- rep(20, 3)
numaffected <- c(0, 2, 20)
mydat <- dataprep(dose=conc, ntot=numtested, nfx=numaffected)
intslope <- fitLWauto(mydat)
fLW <- LWestimate(intslope, mydat)
par(mar=c(4, 4, 1, 1))
plotDELP(mydat, xlab="TFM conc.")
predLinesLP(fLW)
sv <- fitlinear(mydat)
# abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), lwd=2, lty=2)
exp <- c(0.1, 16, 71)/100
boogaard <- lm(probit(exp) ~ log10(conc))$coef
abline(boogaard, col="blue")
assessfit(boogaard, mydat, simple=FALSE)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
predLines(fLW)
abline(h=probit(c(0.16, 0.84)), lwd=2, lty=2)
abline(boogaard, col="blue")
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
?predLines
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
predLines(fLW)
abline(h=probit(c(16, 84)), lwd=2, lty=2)
predLines(LWestimate(boogaard, mydat), col="blue")
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.", xlim=c(1, 2.6))
predLines(fLW)
abline(h=probit(c(16, 84)), lwd=2, lty=2)
predLines(LWestimate(boogaard, mydat), col="blue")
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
predLines(fLW)
abline(h=probit(c(16, 84)), lwd=2, lty=2)
predLines(LWestimate(boogaard, mydat), col="blue")
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
predLines(LWestimate(boogaard, mydat), col="blue")
predLines(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
# TFM data
conc <- c(1, 1.5, 2)
numtested <- rep(20, 3)
numaffected <- c(0, 2, 20)
mydat <- dataprep(dose=conc, ntot=numtested, nfx=numaffected)
intslope <- fitLWauto(mydat)
fLW <- LWestimate(intslope, mydat)
sv <- fitlinear(mydat)
exp <- c(0.1, 16, 71)/100
boogaard <- lm(probit(exp) ~ log10(conc))$coef
assessfit(boogaard, mydat, simple=FALSE)
bb <- LWestimate(boogaard, mydat)
par(mar=c(4, 4, 1, 1))
plotDELP(mydat, xlab="TFM conc.")
# abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), lwd=2, lty=2)
#abline(boogaard, col="blue")
predLinesLP(bb, col="blue")
predLinesLP(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
predLines(bb, col="blue")
predLines(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDELP(mydat, xlab="TFM conc.")
# abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), lwd=2, lty=2)
#abline(boogaard, col="blue")
predLinesLP(bb, col="blue")
predLinesLP(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
predLines(bb, col="blue")
predLines(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
library(LW1949)
# TFM data
conc <- c(1, 1.5, 2)
numtested <- rep(100, 3)
numaffected <- c(0, 16, 100)
mydat <- dataprep(dose=conc, ntot=numtested, nfx=numaffected)
intslope <- fitLWauto(mydat)
fLW <- LWestimate(intslope, mydat)
sv <- fitlinear(mydat)
# exp <- c(0.1, 16, 71)/100
# boogaard <- lm(probit(exp) ~ log10(conc))$coef
# assessfit(boogaard, mydat, simple=FALSE)
# bb <- LWestimate(boogaard, mydat)
par(mar=c(4, 4, 1, 1))
plotDELP(mydat, xlab="TFM conc.")
# abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), lwd=2, lty=2)
#abline(boogaard, col="blue")
#predLinesLP(bb, col="blue")
predLinesLP(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
#predLines(bb, col="blue")
predLines(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
fLW
# TFM data
conc <- c(1, 1.5, 2)
numtested <- rep(100, 3)
numaffected <- c(0, 17, 100)
mydat <- dataprep(dose=conc, ntot=numtested, nfx=numaffected)
intslope <- fitLWauto(mydat)
fLW <- LWestimate(intslope, mydat)
sv <- fitlinear(mydat)
# exp <- c(0.1, 16, 71)/100
# boogaard <- lm(probit(exp) ~ log10(conc))$coef
# assessfit(boogaard, mydat, simple=FALSE)
# bb <- LWestimate(boogaard, mydat)
par(mar=c(4, 4, 1, 1))
plotDELP(mydat, xlab="TFM conc.")
# abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), lwd=2, lty=2)
#abline(boogaard, col="blue")
#predLinesLP(bb, col="blue")
predLinesLP(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
#predLines(bb, col="blue")
predLines(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
?predprobit
predprobit(10, fLW)
predlinear(10, fLW)
predlinear(99.9, fLW)
predlinear(0.1, fLW)
fLW$params
exp2 <- invprobit(fLW$params[1] + fLW$params[2]*log10(1))
rand <- rbinom(100000, size=100, prob=exp2)
mean(rand<0.5)
100*mean(rand<0.5)
exp2 <- invprobit(fLW$params[1] + fLW$params[2]*log10(1))
exp2
format(exp2, sci=10)
source('C:/JVA/ASA/CSP SC/CSP2016/RegistrationCountGraph.R', echo=TRUE)
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
setwd("C:/JVA/GitHub/LW1949")
library(jvamisc)
devtools::install_github("JVAdams/LW1949", build_vignettes=TRUE)
library(LW1949)
vignette("Intro")
# TFM data
conc <- c(1, 1.5, 2)
numtested <- rep(100, 3)
numaffected <- c(0, 16, 100)
mydat <- dataprep(dose=conc, ntot=numtested, nfx=numaffected)
intslope <- fitLWauto(mydat)
fLW <- LWestimate(intslope, mydat)
sv <- fitlinear(mydat)
# exp <- c(0.1, 16, 71)/100
# boogaard <- lm(probit(exp) ~ log10(conc))$coef
# assessfit(boogaard, mydat, simple=FALSE)
# bb <- LWestimate(boogaard, mydat)
par(mar=c(4, 4, 1, 1))
plotDELP(mydat, xlab="TFM conc.")
# abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), lwd=2, lty=2)
#abline(boogaard, col="blue")
#predLinesLP(bb, col="blue")
predLinesLP(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
#predLines(bb, col="blue")
predLines(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
library(LW1949)
# TFM data
conc <- c(1, 1.5, 2)
numtested <- rep(100, 3)
numaffected <- c(0, 16, 100)
mydat <- dataprep(dose=conc, ntot=numtested, nfx=numaffected)
intslope <- fitLWauto(mydat)
fLW <- LWestimate(intslope, mydat)
sv <- fitlinear(mydat)
# exp <- c(0.1, 16, 71)/100
# boogaard <- lm(probit(exp) ~ log10(conc))$coef
# assessfit(boogaard, mydat, simple=FALSE)
# bb <- LWestimate(boogaard, mydat)
par(mar=c(4, 4, 1, 1))
plotDELP(mydat, xlab="TFM conc.")
# abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), lwd=2, lty=2)
#abline(boogaard, col="blue")
#predLinesLP(bb, col="blue")
predLinesLP(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
par(mar=c(4, 4, 1, 1))
plotDE(mydat, xlab="TFM conc.")
#predLines(bb, col="blue")
predLines(fLW)
legend("topleft", c("LW1949", "hand"), lwd=c(2, 1), col=c("black", "blue"))
?optim
library(LW1949)
gamptable1()
gamtable1()
?dataprep
?fitLWauto
?LWestimate
?predlinear
?fitHand
?relPotency
?LWnomo1
LWnomo1()
choose(4, 2)
n <- 8
library(jvamisc)
binomCI(6)
binomCI(rep(0, 8))
1 - 0.05^(1/8)
binomCI(rep(8, 8))
binomCI(rep(1, 8))
log(0.5)/log(0.05)
log(0.05)/log(0.5)
1 - 0.05^(1/5)
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
library(jvamisc)
setwd("C:/JVA/GitHub/LW1949")
install.packages("gld")
R.Version()
gamtable1()
predict(0.3, gamtable1())
?gamtable1
correctval(c(0.37, 0.5, 0.63), gamtable1())
correctval(c(0.495, 0.505), gamtable1())
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
library(jvamisc)
setwd("C:/JVA/GitHub/LW1949")
devtools::install_github("JVAdams/LW1949", build_vignettes=TRUE)
install.packages("xtable")
.libPaths()
R.Version(
)
devtools::install_github("JVAdams/LW1949", build_vignettes=TRUE)
install.packages("devtools")
install.packages("knitr")
devtools::install_github("JVAdams/LW1949", build_vignettes=TRUE)
R.Version()
library(jvamisc)
devtools::install_github("JVAdams/jvamisc")
install.packages("rJava")
devtools::install_github("JVAdams/jvamisc")
install.packages("XLConnect")
install.packages(c("mvbutils", "sp", "maptools", "GISTools", "multcomp", "akima", "dismo", "XML", "RgoogleMaps", "ggmap", "proj4", "jpeg", "RJSONIO", "rpanel"))
devtools::install_github("JVAdams/jvamisc")
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
install.packages("roxygen2")
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
??uninstall
remove.packages("testthat")
install.packages("testthat")
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
library(jvamisc)
setwd("C:/JVA/GitHub/LW1949")
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(jvamisc)
setwd("C:/JVA/GitHub/LW1949")
devtools::install_github("JVAdams/LW1949", build_vignettes=TRUE)
library(LW1949)
# I've been playing around with real data this time and found something interesting that we need to address.  The following data set is from one of the on-site toxicity tests conducted in the field.  Tests are on larval lampreys so I'm trying to estimate the LC99.9:
conc <- c(7.8, 6.2, 5, 4, 3.2, 2.6, 2.1, 1.7, 1.3, 0)
numtested <- c(10, 10, 10, 10, 10, 10, 10, 10, 10, 10)
numaffected <- c(10, 10, 10, 9, 8, 0, 0, 0, 0, 0)
mydat <- dataprep(dose=conc, ntot=numtested, nfx=numaffected)
intslope <- fitLWauto(mydat)
fLW <- LWestimate(intslope, mydat)
plotDELP(mydat)
predLinesLP(fLW)
sv <- fitlinear(mydat)
abline(sv, col="red")
abline(h=probit(c(0.16, 0.84)), col="blue")
conc <- c(7.8, 6.2, 5, 4, 3.2, 2.6, 2.1, 1.7, 1.3, 0)
numtested <- c(10, 10, 10, 10, 10, 10, 10, 10, 10, 10)
numaffected <- c(10, 10, 10, 9, 8, 0, 0, 0, 0, 0)
mydat <- dataprep(dose=conc, ntot=numtested, nfx=numaffected)
intslope <- fitLWauto(mydat)
fLW <- LWestimate(intslope, mydat)
plotDELP(mydat)
predLinesLP(fLW)
cleanup()
# load package
library(LW1949)
# input data
conc <- c(7.8, 6.2, 5, 4, 3.2, 2.6, 2.1, 1.7, 1.3, 0)
numtested <- c(10, 10, 10, 10, 10, 10, 10, 10, 10, 10)
numaffected <- c(10, 10, 10, 9, 8, 0, 0, 0, 0, 0)
# fit dose-response curve
mydat <- dataprep(dose=conc, ntot=numtested, nfx=numaffected)
intslope <- fitLWauto(mydat)
fLW <- LWestimate(intslope, mydat)
# plot results
plotDELP(mydat)
predLinesLP(fLW)
plotDE(mydat)
predLines(fLW)
# show prediction
predlinear(99.9, fLW)
# plot results
par(mfrow=c(2, 1), mar=c(4, 4, 1, 1))
plotDELP(mydat)
predLinesLP(fLW)
plotDE(mydat)
predLines(fLW)
library(jvamisc)
install.packages(c("cluster", "commonmark", "DBI", "FSA", "FSAdata", "gdtools", "gmp", "jsonlite", "maptools", "mclust", "mvtnorm", "pbkrtest", "RcppEigen", "rgl", "rvg", "SparseM", "spdep", "survival", "tm"))
install.packages("gdtools")
remove.packages("gdtools")
remove.packages("cluster", lib="~/R/R-3.3.3/library")
remove.packages("survival", lib="~/R/R-3.3.3/library")
install.packages(c("gdtools", "cluster", "survival"))
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
.libPaths()
install.packages("devtools", "rJava", "XLConnect", "maps", "mapproj", "h2o")
devtools::install_github("JVAdams/jvamisc")
devtools::install_github("JVAdams/artiFISHal")
devtools::install_github("JVAdams/EchoNet2Fish")
devtools::install_github("JVAdams/LW1949")
install.packages("devtools")
install.packages("rJava")
install.packages("XLConnect")
install.packages("maps")
install.packages("mapproj")
install.packages("h2o")
devtools::install_github("JVAdams/jvamisc")
devtools::install_github("JVAdams/artiFISHal")
devtools::install_github("JVAdams/EchoNet2Fish")
devtools::install_github("JVAdams/LW1949")
install.packages(c("dplyr", "purrr", "tidyr", "ggplot2"))
library(LW1949)
library(testthat)
library(magrittr)
install.packages("testthat")
remove.packages("cluster")
remove.packages("survival")
install.packages(c("cluster", "survival"))
library(jvamisc)
devtools::install_github("JVAdams/jvamisc")
install.packages("TSP")
devtools::install_github("JVAdams/jvamisc")
install.packages("registry")
devtools::install_github("JVAdams/jvamisc")
install.packages("gclus")
devtools::install_github("JVAdams/jvamisc")
install.packages("gplots")
devtools::install_github("JVAdams/jvamisc")
install.packages(c("networkD3", "pdftools", "V8"))
devtools::install_github("JVAdams/artiFISHal")
devtools::install_github("JVAdams/EchoNet2Fish")
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
f <- "C:/JVA/GitHub/LW1949/inst/CITATION"
tools::showNonASCII( readLines(f))
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
f <- "C:/JVA/GitHub/LW1949/inst/CITATION"
tools::showNonASCII( readLines(f))
readLines(f)
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
devtools::install_github("JVAdams/LW1949", build_vignettes=TRUE)
library(LW1949)
vignette("Intro")
library(devtools)
build_win(pkg="C:/JVA/GitHub/LW1949", version="R-devel")
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
library(devtools)
build_win(pkg="C:/JVA/GitHub/LW1949", version="R-devel")
devtools::install_github("JVAdams/LW1949", build_vignettes=TRUE)
library(LW1949)
vignette("Intro")
library(devtools)
build_win(pkg="C:/JVA/GitHub/LW1949", version="R-devel")
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
devtools::install_github("JVAdams/LW1949", build_vignettes=TRUE)
library(LW1949)
vignette("Intro")
release(pkg="C:/JVA/GitHub/LW1949")
devtools::release(pkg="C:/JVA/GitHub/LW1949")
?devtools::release
release(pkg="C:/JVA/GitHub/LW1949")
devtools::release(pkg="C:/JVA/GitHub/LW1949")
library(jvamisc)
cleanup()
myPkg <- "LW1949"
pkgup(myPkg)
pkgin(myPkg)
library(LW1949)
library(testthat)
library(magrittr)
test_package(myPkg)
devtools::install_github("JVAdams/LW1949", build_vignettes=TRUE)
devtools::use_build_ignore("notes")
library(devtools)
?use_build_ignore
use_build_ignore("dcf", pkg="LW1949")
use_build_ignore("dcf", pkg=".")
setwd("C:/JVA/GitHub/LW1949")
use_build_ignore("dcf")
use_build_ignore("notes")
